# Stage 1: Build the React app
FROM node:18-alpine AS build
USER 1000
WORKDIR /app
# Leverage caching by installing dependencies first
COPY package.json package-lock.json ./
USER root
RUN npm install --frozen-lockfile
# Copy the rest of the application code and build for production
COPY . ./
RUN chown -R node:node /app/node_modules
USER 1000
RUN npm run build

# Stage 2: Development environment
FROM node:18-alpine AS development
USER 1000
WORKDIR /app

# Install dependencies again for development
COPY package.json package-lock.json ./
USER root
RUN npm install --frozen-lockfile
# Copy the full source code
COPY . ./
RUN chown -R node:node /app/node_modules
USER 1000 
# Expose port for the development server EXPOSE 3000
CMD ["npm", "start"]

# Stage 3: Production environment
FROM nginxinc/nginx-unprivileged:stable-alpine AS production
# Copy the production build artifacts from the build stage
COPY --from=build /app/build /usr/share/nginx/html
#RUN chown -R nginx:nginx /etc/nginx
USER nginx
# Expose the default NGINX port
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
